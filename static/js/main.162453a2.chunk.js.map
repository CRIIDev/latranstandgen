{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["devTeam","compDev","currentDev","show","autoStart","count","countdownApi","timeSelect","end","length","time","value","label","animatedComponents","makeAnimated","devOps","App","props","useState","nameState","setNameState","nowState","setNowState","Date","now","timerState","setTimerState","handleUpdate","reset","next","style","textAlign","backgroundColor","minHeight","className","id","display","maxWidth","width","border","Col","sm","Row","form","md","FormGroup","Label","isMulti","closeMenuOnSelect","components","onChange","opts","forEach","option","push","options","defaultValue","placeholder","parseInt","JSON","stringify","console","log","Button","onClick","array","i","j","Math","floor","random","shuffle","color","fontSize","marginTop","marginLeft","key","date","ref","countdown","getApi","renderer","hours","minutes","seconds","completed","zeroPad","onMount","onStart","onPause","onComplete","start","pause","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.162453a2.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Button, FormGroup, Label, Row, Col} from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport makeAnimated from 'react-select/animated';\r\nimport Countdown, { zeroPad} from 'react-countdown';\r\n\r\nlet devTeam = ['Eitan', 'Reggie', 'Karthik', 'James', 'Josh', 'Nam'];\r\nlet compDev=[];\r\nlet currentDev=[];\r\nlet show=\"none\";\r\nlet autoStart = false;\r\nlet count = 0;\r\nlet countdownApi = null;\r\nlet timeSelect = 15;\r\nlet end = devTeam.length-1;\r\nconst time =[\r\n    { value: 5, label: '5 min'},\r\n    { value: 10, label: '10 min'},\r\n    { value: 15, label: '15 min'},\r\n    { value: 20, label: '20 min'},\r\n    { value: 25, label: '25 min'},\r\n    { value: 30, label: '30 min'},\r\n    { value: 35, label: '35 min'},\r\n    { value: 40, label: '40 min'},\r\n    { value: 45, label: '45 min'},\r\n    { value: 50, label: '50 min'},\r\n    { value: 55, label: '55 min'},\r\n    { value: 60, label: '60 min'}];\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst devOps =[\r\n    { value: 'Eitan', label: 'Eitan'},\r\n    { value: 'Karthik', label: 'Karthik'},\r\n    { value: 'James', label: 'James'},\r\n    { value: 'Reggie', label: 'Reggie'},\r\n    { value: 'Josh', label: 'Josh'},\r\n    { value: 'Nam', label: 'Nam'}];\r\n\r\nconst useForceUpdate = () => useState([0]);\r\n\r\nconst App = (props) => {\r\n\r\n    const [nameState, setNameState] = useState([]);\r\n    const [nowState, setNowState] = useState([]);\r\n    const [timerState, setTimerState] = useState(Date.now() + ((timeSelect*60000)/devTeam.length) );\r\n\r\n\r\n    const forceUpdate = () => useForceUpdate;\r\n\r\n    const setRef = (countdown) => {\r\n        if (countdown) {\r\n            countdownApi =[];\r\n            countdownApi = countdown.getApi();\r\n        }\r\n    };\r\n\r\n    const renderer = ({ hours, minutes, seconds, completed }) => {\r\n\r\n        if (completed && count > end){\r\n            // Render a completed state\r\n            handleUpdate();\r\n            return <h1 style={{color:\"limegreen\", fontSize:\"7rem\"}}> DONE =) </h1>\r\n        } else {\r\n            // Render a countdown\r\n            return <h1 style={{color:\"blue\", fontSize:\"7rem\", display:show}}>{zeroPad(minutes)}:{zeroPad(seconds)}</h1>;\r\n        }\r\n    };\r\n\r\n    const shuffle = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\r\n\r\n            // swap elements array[i] and array[j]\r\n            // we use \"destructuring assignment\" syntax to achieve that\r\n            // let t = array[i]; array[i] = array[j]; array[j] = t\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    };\r\n    const handleUpdate = () => {\r\n        forceUpdate();\r\n    };\r\n\r\n    const generate= () =>{\r\n        shuffle(devTeam);\r\n        compDev = [];\r\n        currentDev = [];\r\n        count=0;\r\n        show=\"\";\r\n        autoStart=false;\r\n        for (let i = 0; i < devTeam.length; i++){\r\n            compDev.push(<h2>{devTeam[i]}</h2>);\r\n            currentDev.push(\"You're up \" + devTeam[i]+\"!\");\r\n        }\r\n        setNameState(compDev);\r\n\r\n        setNowState(currentDev[count]);\r\n\r\n        setTimerState(Date.now() + ((timeSelect*60000)/devTeam.length));\r\n    };\r\n\r\n    const start = () => {\r\n        countdownApi.start();\r\n    };\r\n    const stop = () => {\r\n        countdownApi.pause();\r\n    };\r\n    const reset = () => {\r\n        autoStart=true;\r\n        setTimerState(Date.now() + ((timeSelect*60000)/devTeam.length));\r\n    };\r\n    const next = () => {\r\n\r\n        if (!devTeam[count]  && count > devTeam.length-2){\r\n            setNowState([]);\r\n            setTimerState([]);\r\n        }else{\r\n            count++;\r\n            setNowState(currentDev[count]);\r\n            reset();\r\n        }\r\n    };\r\n\r\n    const prev = () => {\r\n\r\n        if (count < 1){\r\n            return;\r\n        }else{\r\n            count--;\r\n            setNowState(currentDev[count]);\r\n            reset();\r\n        }\r\n    };\r\n\r\n    const timeSelectHandler = (opts) => {\r\n\r\n        timeSelect = parseInt(JSON.stringify(opts.value));\r\n        console.log(timeSelect);\r\n    };\r\n\r\n    const peopleHandler = (opts) =>{\r\n        devTeam = [];\r\n\r\n        opts.forEach((option) =>{\r\n            devTeam.push(option.value);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={{textAlign: \"center\", backgroundColor: \"#f0f2f5\", minHeight: \"50rem\"}}>\r\n            <header className=\"App-header\">\r\n                <h1 style={{backgroundColor: \"gold\"}}>\r\n                    Stand Up Generator\r\n                </h1>\r\n            </header>\r\n\r\n            <div className=\"tab-content mx-auto col-sm-12 col-lg-10 tab-pane active\" style={{ textAlign: \"center\" }} id=\"cardDiv\">\r\n                <div>\r\n                    <div className=\"d-flex justify-content-center mt-3\" > </div>\r\n                    <div className=\"card mb mt-2\" id=\"cardDiv\" style={{ display: \"inline-block\", maxWidth: \"83.333333%\", width: \"100%\" }}>\r\n                        <div className=\"card-body\" style={{border: \"0px \"}}>\r\n                            <Col sm=\"12\">\r\n                                <Row form>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <Label>Participants</Label>\r\n                                            <CreatableSelect\r\n                                                isMulti\r\n                                                closeMenuOnSelect={false}\r\n                                                components={animatedComponents}\r\n                                                onChange={peopleHandler}\r\n                                                options={devOps}\r\n                                                defaultValue ={[devOps[0], devOps[1], devOps[2], devOps[3], devOps[4], devOps[5]]}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <Label>Select Time</Label>\r\n                                            <Select\r\n                                                closeMenuOnSelect={true}\r\n                                                placeholder={\"15 min\"}\r\n                                                options = {time}\r\n                                                defaultValue={{value: 15, label: '15 min'}}\r\n                                                onChange={timeSelectHandler}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Button style={{backgroundColor: \"#32CD32\"}} onClick={generate}>Generate</Button>\r\n\r\n                                <h1 style={{color: \"red\", display:show, fontSize: \"5rem\", marginTop: \"1rem\"}}>{nowState}</h1>\r\n\r\n                                <Button style={{backgroundColor: \"#3386FF\", display:show }} onClick={prev}>Prev</Button>\r\n                                <Button style={{backgroundColor: \"#3386FF\", display:show, marginLeft: \"1rem\" }} onClick={next}>Next</Button>\r\n\r\n                                <h1>\r\n                                    <Countdown\r\n                                        key={timerState}\r\n                                        date={timerState}\r\n                                        ref={setRef}\r\n                                        renderer={renderer}\r\n                                        onMount={handleUpdate}\r\n                                        onStart={handleUpdate}\r\n                                        onPause={handleUpdate}\r\n                                        onComplete={next}\r\n                                        autoStart={autoStart}\r\n                                    />\r\n                                </h1>\r\n                                <Button style={{backgroundColor: \"green\", display:show }} onClick={start}>Start</Button>\r\n                                <Button style={{backgroundColor: \"red\", display:show, marginLeft: \"1rem\" }} onClick={stop}>Stop</Button>\r\n                                <Button style={{backgroundColor: \"gold\", color:\"black\", display:show, marginLeft: \"1rem\" }} onClick={reset}>Reset</Button>\r\n                                <h4 style={{marginTop: \"2rem\" }}>{nameState}</h4>\r\n                            </Col>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}